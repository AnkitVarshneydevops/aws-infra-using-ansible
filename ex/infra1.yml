---
- name: Setup stack
  hosts: localhost
  connection: local
  gather_facts: no
  vars_files:
    - vpr_stack_vars/cloudvars
  tasks:
    - name: Create ec2 key
      ec2_key:
        name: infra-key
        region: "{{region}}"
      register: vpr_key_info
    - name: Save private key into file login_key
      copy:
        content:  "{{ vpr_key_info.key.private_key }}"
        dest: "./infra-key.pem"
        mode: 0600
      when: vpr_key_info.changed

    - name: Create Security Group from Vprofile Stack
      ec2_group:
        name: vpr_stack_sg
        description: Allow port 22,80,3306 and 8080 within sg
        region: "{{region}}"
        rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: "{{ip}}"
          - proto: tcp
            from_port: 8080
            to_port: 8080
            cidr_ip: "{{ip}}"
          - proto: tcp
            from_port: 3306
            to_port: 3306
            cidr_ip: "{{ip}}"
      register: sg_info
    - name: Create Security Group from Vprofile Stack
      ec2_group:
        name: vpr_stack_sg
        description: Allow port 22,80,3306 and 8080 within sg
        region: "{{region}}"
        rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: "{{ip}}"
          - proto: tcp
            from_port: 8080
            to_port: 8080
            cidr_ip: "{{ip}}"
          - proto: tcp
            from_port: 3306
            to_port: 3306
            cidr_ip: "{{ip}}"

          - proto: all
            group_id: "{{sg_info.group_id}}"

      register: sg_info

      #    - debug:
      # msg: "{{sg_info.group_id}}"
    - name: Creating All Instances Nginx, tomcat, RMQ,Memcached,DB
      ec2:
        key_name: infra-key
        region: "{{region}}"
        instance_type: "{{inst_type}}"
        image: "{{ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "{{item.name}}"
          Project: Vprofile
          owner: Devops team
        exact_count: 1 
        count_tag:
          Name: "{{item.name}}"
          Project: Vprofile
          owner: Devops team
        group_id: "{{sg_info.group_id}}"
        vpc_subnet_id: "{{item.subnet}}"
      loop:
        - name: Nginx01
          subnet: "{{sub1}}"
        - name: Nginx02
          subnet: "{{sub2}}"
        - name: Tomcat01
          subnet: "{{sub1}}"
        - name: Tomcat02
          subnet: "{{sub1}}"
        - name: RMQ01
          subnet: "{{sub2}}"
        - name: Memcache01
          subnet: "{{sub3}}"
        - name: db01
          subnet: "{{sub1}}"
      register: ins
    - debug:
        msg: "Public IP for the instance {{item.name}} is: {{item.IP}}"
      loop:
       - name: Nginx01
         IP: "{{ins.results[0].tagged_instances[0].public_ip}}"
       - name: Nginx02
         IP: "{{ins.results[1].tagged_instances[0].public_ip}}"
       - name: Tomcat01
         IP: "{{ins.results[2].tagged_instances[0].public_ip}}"
       - name: Tomcat02
         IP: "{{ins.results[3].tagged_instances[0].public_ip}}"
       - name: RMQ01
         IP: "{{ins.results[4].tagged_instances[0].public_ip}}"
       - name: Memcache01
         IP: "{{ins.results[5].tagged_instances[0].public_ip}}"
       - name: db01
         IP: "{{ins.results[6].tagged_instances[0].public_ip}}"

